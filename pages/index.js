import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import Modal from '../components/modal';
import { useCallback, useEffect } from 'react';
import { useRouter } from 'next/router';
import styles from '../styles/Home.module.css';

export default function Home({ data }) {
  const router = useRouter();
  const { id } = router.query;
  const info = id && data && data.find((item) => item.id === Number(id));
  
  const onDismiss = useCallback(() => {
    if (id) router.back();
  }, [id, router]);

  const onKeyDown = useCallback(
    (e) => {
      if (e.key === 'Escape') onDismiss();
    },
    [onDismiss]
  );

  useEffect(() => {
    document.addEventListener('keydown', onKeyDown);
    return () => document.removeEventListener('keydown', onKeyDown);
  }, [onKeyDown]);
  
  return (
    <>
      <Head>
        <title>AWESOME FOOD STORE</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        {id && <Modal info={info} onDismiss={onDismiss} />}
        <ul className={styles.flexBox}>
          {Array.isArray(data) &&
            data.map((item) => {
              return (
                <li key={item.id} className={styles.thumbLayout}>
                  <Link
                    href={{ pathname: '/', query: { id: item.id } }}
                    as={`/stores/${encodeURI(item.id)}`}
                    shallow
                  >
                    <Image
                      src={item.thumb}
                      alt='food image'
                      width={200}
                      height={200}
                      priority
                      className={styles.thumb}
                    />
                  </Link>
                </li>
              );
            })}
        </ul>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  const data = await (
    await fetch(`http://localhost:9000/stores`) 
  ).json();
  return {
    props: {
      data,
    },
  };
}
